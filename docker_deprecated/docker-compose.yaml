services:
  # Certbot service (disabled by default)
  # Use `docker-compose --profile certbot up certbot` to start the certbot service.
  certbot:
    image: certbot/certbot
    profiles:
      - certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/html
      - ./certbot/logs:/var/log/letsencrypt
      - ./certbot/conf/live:/etc/letsencrypt/live
      - ./certbot/update-cert.template.txt:/update-cert.template.txt
      - ./certbot/docker-entrypoint.sh:/docker-entrypoint.sh
    env_file: .env
    entrypoint: ['/docker-entrypoint.sh']
    command: ['tail', '-f', '/dev/null']
    restart: "no"
  dify-chat:
    container_name: dify-chat
    image: ${DOCKER_IMAGE}
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template
      - ./nginx/https.conf.template:/etc/nginx/https.conf.template
      - ./nginx/certbot.conf.template:/etc/nginx/certbot.conf.template
      - ./nginx/301.conf.template:/etc/nginx/301.conf.template
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/docker-entrypoint.sh:/docker-entrypoint-mount.sh
      - ./nginx/ssl:/etc/ssl
      # Only mount certbot volumes if SSL certificates exist
      - ./certbot/conf/live:/etc/letsencrypt/live:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/html:ro
    ports:
      - ${EXPOSE_NGINX_PORT}:${NGINX_PORT}
      - ${EXPOSE_NGINX_SSL_PORT}:${NGINX_SSL_PORT}
    environment:
      # React App API URLs (runtime injection)
      - PUBLIC_APP_API_BASE=${PUBLIC_APP_API_BASE:-http://localhost:5300/api/client}
      - PUBLIC_DIFY_PROXY_API_BASE=${PUBLIC_DIFY_PROXY_API_BASE:-http://localhost:5300/api/client/dify}
      # Platform backend environment
      - NODE_ENV=production
      - PORT=5300
      - DATABASE_URL=${DATABASE_URL:-file:./prod.db}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:5300/ || curl -f http://localhost/chat/index.html"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    entrypoint:
      [
        'sh',
        '-c',
        "cp /docker-entrypoint-mount.sh /docker-entrypoint.sh && sed -i 's/\r$$//' /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh && /docker-entrypoint.sh",
      ]
    networks:
      - dify-chat
    env_file: .env
networks:
  dify-chat:
    driver: bridge
